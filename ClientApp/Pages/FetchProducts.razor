@page "/products"
@using InventoryHub.Shared.Models
@using System.Text.Json
@inject HttpClient Http

<h3>Product List</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}
else if (products != null)
{
    foreach (var item in products)
    {
        <h3>@item.Name</h3>
        <ul>
            <li>$@item.Price.ToString("F2")</li>
        </ul>
        <br \>
    }
}
else
{
    <p>Loading...</p>
}


@code
{
    private List<Product>? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("http://localhost:5077/api/productlist");
            var json = await response.Content.ReadAsStringAsync();
            products = JsonSerializer.Deserialize<List<Product>>(json);
        }
        catch (TaskCanceledException)
        {
            errorMessage = "Request timed out.";
        }
        /* catch (JsonException)
        {
            errorMessage = "Failed to parse catalog data.";
        } */
        catch (Exception ex)
        {
            errorMessage = $"An error occured: {ex.Message}";
        }
    }
}